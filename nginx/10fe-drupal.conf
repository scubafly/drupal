server {
  listen *:80;
  server_name           CHANGEME.amazee.io _;

  client_body_timeout 10s;
  client_header_timeout 10s;
  client_max_body_size 2048m;


  resolver                   8.8.8.8 8.8.4.4;
  add_header              X-Robots-Tag 'noindex, nofollow' always;
  index  index.php;

  access_log            /var/www/drupal/logs/nginx/10fe-drupal.access.log combined;
  error_log             /var/www/drupal/logs/nginx/10fe-drupal.error.log;

  location / {

    auth_basic off;
    if ($http_cookie ~* "upstream=backend" ) {
      proxy_pass http://127.0.0.1:8080;
      break;
    }
    if ($http_cookie ~* "upstream=varnish" ) {
      proxy_pass http://127.0.0.1:8088;
      break;
    }
    access_by_lua '
      -- match() does not like not existing cookies, we set it to space if it does not exist
      local http_cookie = " "
      if ngx.var.http_cookie then http_cookie = ngx.var.http_cookie end
      local cookie_test = ngx.re.match(http_cookie, "SESS", "i")
      local uri_test = ngx.re.match(ngx.var.request_uri, "panels/ajax", "i")
      if not cookie_test and uri_test then
        ngx.log(ngx.ALERT, "ALERT SA-CONTRIB-2016-047: prevented access to URL: ", ngx.var.request_uri)
        ngx.exit(ngx.HTTP_FORBIDDEN)
      end
    ';
    proxy_pass            http://127.0.0.1:8080;
    proxy_read_timeout    30m;
    proxy_connect_timeout 90s;
    proxy_redirect        off;

    proxy_set_header      Host              $host;
    proxy_set_header      X-Forwarded-By    $server_addr:$server_port;
    proxy_set_header      X-Forwarded-For   $http_x_forwarded_for;
    proxy_set_header      X-Forwarded-Proto $scheme;
    proxy_set_header      Connection        close;
    proxy_set_header      PROXY             "";


    header_filter_by_lua '
      if ngx.header["X-AMAZEEIO"] then
        append = ngx.header["X-AMAZEEIO"]
      else
        append = ""
      end
      ngx.header["X-AMAZEEIO"] = "docker.compact frontend>" .. append
    ';
    gzip_proxied any;
    send_timeout 15s;
    max_ranges 1;
    reset_timedout_connection on;

  }

  location ~ ^/amazeeio/upstream/(.+)$ {

    add_header Set-Cookie "upstream=$1;Domain=$host;path=/";
    return 302 $scheme://$host;
  }
}
server {
  listen       *:443 ssl;
  server_name  amazee_io.docker.amazee.io _;

  ssl on;

  ssl_certificate           /etc/nginx/ssl/drupal.crt;
  ssl_certificate_key       /etc/nginx/ssl/drupal.key;
  ssl_dhparam               /etc/nginx/ssl/dhparams_2048.pem;
  ssl_session_cache         shared:SSL:10m;
  ssl_session_timeout       5m;
  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers               ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
  ssl_prefer_server_ciphers on;





  resolver                   8.8.8.8 8.8.4.4;

  client_body_timeout 10s;
  client_header_timeout 10s;
  client_max_body_size 2048m;

  index  index.php;

  access_log            /var/www/drupal/logs/nginx/10fe-drupal.access.log combined;
  error_log             /var/www/drupal/logs/nginx/10fe-drupal.error.log;

  add_header              X-Robots-Tag 'noindex, nofollow' always;

  location / {

    auth_basic off;
    if ($http_cookie ~* "upstream=backend" ) {
      proxy_pass http://127.0.0.1:8080;
      break;
    }
    if ($http_cookie ~* "upstream=varnish" ) {
      proxy_pass http://127.0.0.1:8088;
      break;
    }
    access_by_lua '
      -- match() does not like not existing cookies, we set it to space if it does not exist
      local http_cookie = " "
      if ngx.var.http_cookie then http_cookie = ngx.var.http_cookie end
      local cookie_test = ngx.re.match(http_cookie, "SESS", "i")
      local uri_test = ngx.re.match(ngx.var.request_uri, "panels/ajax", "i")
      if not cookie_test and uri_test then
        ngx.log(ngx.ALERT, "ALERT SA-CONTRIB-2016-047: prevented access to URL: ", ngx.var.request_uri)
        ngx.exit(ngx.HTTP_FORBIDDEN)
      end
    ';
    proxy_pass            http://127.0.0.1:8080;
    proxy_read_timeout    30m;
    proxy_connect_timeout 90s;
    proxy_redirect        off;

    proxy_set_header      Host              $host;
    proxy_set_header      X-Forwarded-By    $server_addr:$server_port;
    proxy_set_header      X-Forwarded-For   $http_x_forwarded_for;
    proxy_set_header      X-Forwarded-Proto $scheme;
    proxy_set_header      Connection        close;
    proxy_set_header      PROXY             "";


    header_filter_by_lua '
      if ngx.header["X-AMAZEEIO"] then
        append = ngx.header["X-AMAZEEIO"]
      else
        append = ""
      end
      ngx.header["X-AMAZEEIO"] = "docker.compact frontend>" .. append
    ';
    gzip_proxied any;
    send_timeout 15s;
    max_ranges 1;
    reset_timedout_connection on;

  }

  location ~ ^/amazeeio/upstream/(.+)$ {

    add_header Set-Cookie "upstream=$1;Domain=$host;path=/";
    return 302 $scheme://$host;
  }
}
